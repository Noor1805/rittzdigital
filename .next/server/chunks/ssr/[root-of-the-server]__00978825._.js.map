{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/win11/PROJECTS/rittzworld/src/components/Header.jsx"],"sourcesContent":["\"use client\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Header = () => {\r\n  const [showHeader, setShowHeader] = useState(true);\r\n  const [lastScrollY, setLastScrollY] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const currentScrollY = window.scrollY;\r\n\r\n      if (currentScrollY > lastScrollY && currentScrollY > 50) {\r\n        setShowHeader(false); // Scrolling down\r\n      } else {\r\n        setShowHeader(true); // Scrolling up\r\n      }\r\n\r\n      setLastScrollY(currentScrollY);\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, [lastScrollY]);\r\n\r\n  return (\r\n    <div\r\n      className={`fixed top-0 left-0 w-full bg-[#f5f5f57f] backdrop-blur-2xl z-50 transition-transform duration-300 ${\r\n        showHeader ? \"translate-y-0\" : \"-translate-y-full\"\r\n      }`}\r\n    >\r\n      <div className=\"w-full h-18 lg:h-20 border-b flex justify-between items-center\">\r\n        <a href=\"\">\r\n          <img\r\n            className=\"items-center p-4 object-cover h-16 md:h-20\"\r\n            src=\"/assets/rittz_logo.png\"\r\n            alt=\"Peek Insights Logo\"\r\n          />\r\n        </a>\r\n        <div className=\"flex items-center gap-4 mr-4 text-xl font-light\">\r\n          <a className=\"hidden text-lg lg:block\" href=\"\">Beneifts</a>\r\n          <a className=\"hidden text-lg lg:block\" href=\"\">Testimonials</a>\r\n          <a className=\"hidden text-lg lg:block\" href=\"\">What's Included</a>\r\n          <a className=\"hidden text-lg lg:block\" href=\"\">How It Works</a>\r\n          <a className=\"hidden text-lg lg:block\" href=\"\">Pricing</a>\r\n          <button className=\"hidden md:block items-center my-auto py-2 bg-black text-white rounded-xl border-2 border-black hover:bg-white hover:text-black\">\r\n            <a className=\"px-4 text-base\" href=\"\">\r\n              Get a free Audit\r\n            </a>\r\n          </button>\r\n          <div className=\"h-12 w-12 mr-4 cursor-pointer lg:hidden\">\r\n            <svg\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M4 12H20M4 8H20M4 16H12\"\r\n                stroke=\"#000000\"\r\n                strokeWidth=\"0.696\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"],"names":[],"mappings":";;;;AACA;AADA;;;AAGA,MAAM,SAAS;IACb,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,eAAe;YACnB,MAAM,iBAAiB,OAAO,OAAO;YAErC,IAAI,iBAAiB,eAAe,iBAAiB,IAAI;gBACvD,cAAc,QAAQ,iBAAiB;YACzC,OAAO;gBACL,cAAc,OAAO,eAAe;YACtC;YAEA,eAAe;QACjB;QAEA,OAAO,gBAAgB,CAAC,UAAU;QAClC,OAAO,IAAM,OAAO,mBAAmB,CAAC,UAAU;IACpD,GAAG;QAAC;KAAY;IAEhB,qBACE,8OAAC;QACC,WAAW,CAAC,kGAAkG,EAC5G,aAAa,kBAAkB,qBAC/B;kBAEF,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAE,MAAK;8BACN,cAAA,8OAAC;wBACC,WAAU;wBACV,KAAI;wBACJ,KAAI;;;;;;;;;;;8BAGR,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAE,WAAU;4BAA0B,MAAK;sCAAG;;;;;;sCAC/C,8OAAC;4BAAE,WAAU;4BAA0B,MAAK;sCAAG;;;;;;sCAC/C,8OAAC;4BAAE,WAAU;4BAA0B,MAAK;sCAAG;;;;;;sCAC/C,8OAAC;4BAAE,WAAU;4BAA0B,MAAK;sCAAG;;;;;;sCAC/C,8OAAC;4BAAE,WAAU;4BAA0B,MAAK;sCAAG;;;;;;sCAC/C,8OAAC;4BAAO,WAAU;sCAChB,cAAA,8OAAC;gCAAE,WAAU;gCAAiB,MAAK;0CAAG;;;;;;;;;;;sCAIxC,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCACC,SAAQ;gCACR,MAAK;gCACL,OAAM;0CAEN,cAAA,8OAAC;oCACC,GAAE;oCACF,QAAO;oCACP,aAAY;oCACZ,eAAc;oCACd,gBAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ/B;uCAEe","debugId":null}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/win11/PROJECTS/rittzworld/src/animations/ScrambledText.jsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport { gsap } from \"gsap\";\r\nimport { SplitText } from \"gsap/SplitText\";\r\nimport { ScrambleTextPlugin } from \"gsap/ScrambleTextPlugin\";\r\n\r\ngsap.registerPlugin(SplitText, ScrambleTextPlugin);\r\n\r\nconst ScrambledText = ({\r\n  radius = 30,\r\n  duration = 1.2,\r\n  speed = 0.5,\r\n  scrambleChars = \"\",\r\n  className = \"\",\r\n  style = {},\r\n  children,\r\n}) => {\r\n  const rootRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!rootRef.current) return;\r\n\r\n    const split = SplitText.create(rootRef.current.querySelector(\"p\"), {\r\n      type: \"chars\",\r\n      charsClass: \"inline-block will-change-transform\",\r\n    });\r\n\r\n    split.chars.forEach((el) => {\r\n      const c = el;\r\n      gsap.set(c, { attr: { \"data-content\": c.innerHTML } });\r\n    });\r\n\r\n    const handleMove = (e) => {\r\n      split.chars.forEach((el) => {\r\n        const c = el;\r\n        const { left, top, width, height } = c.getBoundingClientRect();\r\n        const dx = e.clientX - (left + width / 2);\r\n        const dy = e.clientY - (top + height / 2);\r\n        const dist = Math.hypot(dx, dy);\r\n\r\n        if (dist < radius) {\r\n          gsap.to(c, {\r\n            overwrite: true,\r\n            duration: duration * (1 - dist / radius),\r\n            scrambleText: {\r\n              text: c.dataset.content || \"\",\r\n              chars: scrambleChars,\r\n              speed,\r\n            },\r\n            ease: \"none\",\r\n          });\r\n        }\r\n      });\r\n    };\r\n\r\n    const el = rootRef.current;\r\n    el.addEventListener(\"pointermove\", handleMove);\r\n\r\n    return () => {\r\n      el.removeEventListener(\"pointermove\", handleMove);\r\n      split.revert();\r\n    };\r\n  }, [radius, duration, speed, scrambleChars]);\r\n\r\n  return (\r\n    <div\r\n      ref={rootRef}\r\n      className={`max-w-[800px] font-mono text-[clamp(14px,4vw,32px)] text-white ${className}`}\r\n      style={style}\r\n    >\r\n      <p>{children}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrambledText;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,6IAAA,CAAA,OAAI,CAAC,cAAc,CAAC,iIAAA,CAAA,YAAS,EAAE,0IAAA,CAAA,qBAAkB;AAEjD,MAAM,gBAAgB,CAAC,EACrB,SAAS,EAAE,EACX,WAAW,GAAG,EACd,QAAQ,GAAG,EACX,gBAAgB,EAAE,EAClB,YAAY,EAAE,EACd,QAAQ,CAAC,CAAC,EACV,QAAQ,EACT;IACC,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,QAAQ,OAAO,EAAE;QAEtB,MAAM,QAAQ,iIAAA,CAAA,YAAS,CAAC,MAAM,CAAC,QAAQ,OAAO,CAAC,aAAa,CAAC,MAAM;YACjE,MAAM;YACN,YAAY;QACd;QAEA,MAAM,KAAK,CAAC,OAAO,CAAC,CAAC;YACnB,MAAM,IAAI;YACV,6IAAA,CAAA,OAAI,CAAC,GAAG,CAAC,GAAG;gBAAE,MAAM;oBAAE,gBAAgB,EAAE,SAAS;gBAAC;YAAE;QACtD;QAEA,MAAM,aAAa,CAAC;YAClB,MAAM,KAAK,CAAC,OAAO,CAAC,CAAC;gBACnB,MAAM,IAAI;gBACV,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,qBAAqB;gBAC5D,MAAM,KAAK,EAAE,OAAO,GAAG,CAAC,OAAO,QAAQ,CAAC;gBACxC,MAAM,KAAK,EAAE,OAAO,GAAG,CAAC,MAAM,SAAS,CAAC;gBACxC,MAAM,OAAO,KAAK,KAAK,CAAC,IAAI;gBAE5B,IAAI,OAAO,QAAQ;oBACjB,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,GAAG;wBACT,WAAW;wBACX,UAAU,WAAW,CAAC,IAAI,OAAO,MAAM;wBACvC,cAAc;4BACZ,MAAM,EAAE,OAAO,CAAC,OAAO,IAAI;4BAC3B,OAAO;4BACP;wBACF;wBACA,MAAM;oBACR;gBACF;YACF;QACF;QAEA,MAAM,KAAK,QAAQ,OAAO;QAC1B,GAAG,gBAAgB,CAAC,eAAe;QAEnC,OAAO;YACL,GAAG,mBAAmB,CAAC,eAAe;YACtC,MAAM,MAAM;QACd;IACF,GAAG;QAAC;QAAQ;QAAU;QAAO;KAAc;IAE3C,qBACE,8OAAC;QACC,KAAK;QACL,WAAW,CAAC,+DAA+D,EAAE,WAAW;QACxF,OAAO;kBAEP,cAAA,8OAAC;sBAAG;;;;;;;;;;;AAGV;uCAEe","debugId":null}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/win11/PROJECTS/rittzworld/src/animations/SplashCursor.jsx"],"sourcesContent":["'use client';\r\nimport { useEffect, useRef } from 'react';\r\n\r\nfunction SplashCursor({\r\n  SIM_RESOLUTION = 128,\r\n  DYE_RESOLUTION = 1440,\r\n  CAPTURE_RESOLUTION = 512,\r\n  DENSITY_DISSIPATION = 3.5,\r\n  VELOCITY_DISSIPATION = 2,\r\n  PRESSURE = 0.1,\r\n  PRESSURE_ITERATIONS = 20,\r\n  CURL = 3,\r\n  SPLAT_RADIUS = 0.2,\r\n  SPLAT_FORCE = 6000,\r\n  SHADING = true,\r\n  COLOR_UPDATE_SPEED = 10,\r\n  BACK_COLOR = { r: 0.5, g: 0, b: 0 },\r\n  TRANSPARENT = true,\r\n}) {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    function pointerPrototype() {\r\n      this.id = -1;\r\n      this.texcoordX = 0;\r\n      this.texcoordY = 0;\r\n      this.prevTexcoordX = 0;\r\n      this.prevTexcoordY = 0;\r\n      this.deltaX = 0;\r\n      this.deltaY = 0;\r\n      this.down = false;\r\n      this.moved = false;\r\n      this.color = [0, 0, 0];\r\n    }\r\n\r\n    let config = {\r\n      SIM_RESOLUTION,\r\n      DYE_RESOLUTION,\r\n      CAPTURE_RESOLUTION,\r\n      DENSITY_DISSIPATION,\r\n      VELOCITY_DISSIPATION,\r\n      PRESSURE,\r\n      PRESSURE_ITERATIONS,\r\n      CURL,\r\n      SPLAT_RADIUS,\r\n      SPLAT_FORCE,\r\n      SHADING,\r\n      COLOR_UPDATE_SPEED,\r\n      PAUSED: false,\r\n      BACK_COLOR,\r\n      TRANSPARENT,\r\n    };\r\n\r\n    let pointers = [new pointerPrototype()];\r\n\r\n    const { gl, ext } = getWebGLContext(canvas);\r\n    if (!ext.supportLinearFiltering) {\r\n      config.DYE_RESOLUTION = 256;\r\n      config.SHADING = false;\r\n    }\r\n\r\n    function getWebGLContext(canvas) {\r\n      const params = {\r\n        alpha: true,\r\n        depth: false,\r\n        stencil: false,\r\n        antialias: false,\r\n        preserveDrawingBuffer: false,\r\n      };\r\n      let gl = canvas.getContext('webgl2', params);\r\n      const isWebGL2 = !!gl;\r\n      if (!isWebGL2)\r\n        gl =\r\n          canvas.getContext('webgl', params) ||\r\n          canvas.getContext('experimental-webgl', params);\r\n      let halfFloat;\r\n      let supportLinearFiltering;\r\n      if (isWebGL2) {\r\n        gl.getExtension('EXT_color_buffer_float');\r\n        supportLinearFiltering = gl.getExtension('OES_texture_float_linear');\r\n      } else {\r\n        halfFloat = gl.getExtension('OES_texture_half_float');\r\n        supportLinearFiltering = gl.getExtension(\r\n          'OES_texture_half_float_linear'\r\n        );\r\n      }\r\n      gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n      const halfFloatTexType = isWebGL2\r\n        ? gl.HALF_FLOAT\r\n        : halfFloat && halfFloat.HALF_FLOAT_OES;\r\n      let formatRGBA;\r\n      let formatRG;\r\n      let formatR;\r\n\r\n      if (isWebGL2) {\r\n        formatRGBA = getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, halfFloatTexType);\r\n        formatRG = getSupportedFormat(gl, gl.RG16F, gl.RG, halfFloatTexType);\r\n        formatR = getSupportedFormat(gl, gl.R16F, gl.RED, halfFloatTexType);\r\n      } else {\r\n        formatRGBA = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\r\n        formatRG = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\r\n        formatR = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\r\n      }\r\n\r\n      return {\r\n        gl,\r\n        ext: {\r\n          formatRGBA,\r\n          formatRG,\r\n          formatR,\r\n          halfFloatTexType,\r\n          supportLinearFiltering,\r\n        },\r\n      };\r\n    }\r\n\r\n    function getSupportedFormat(gl, internalFormat, format, type) {\r\n      if (!supportRenderTextureFormat(gl, internalFormat, format, type)) {\r\n        switch (internalFormat) {\r\n          case gl.R16F:\r\n            return getSupportedFormat(gl, gl.RG16F, gl.RG, type);\r\n          case gl.RG16F:\r\n            return getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, type);\r\n          default:\r\n            return null;\r\n        }\r\n      }\r\n      return {\r\n        internalFormat,\r\n        format,\r\n      };\r\n    }\r\n\r\n    function supportRenderTextureFormat(gl, internalFormat, format, type) {\r\n      const texture = gl.createTexture();\r\n      gl.bindTexture(gl.TEXTURE_2D, texture);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n      gl.texImage2D(\r\n        gl.TEXTURE_2D,\r\n        0,\r\n        internalFormat,\r\n        4,\r\n        4,\r\n        0,\r\n        format,\r\n        type,\r\n        null\r\n      );\r\n      const fbo = gl.createFramebuffer();\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\r\n      gl.framebufferTexture2D(\r\n        gl.FRAMEBUFFER,\r\n        gl.COLOR_ATTACHMENT0,\r\n        gl.TEXTURE_2D,\r\n        texture,\r\n        0\r\n      );\r\n      const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n      return status === gl.FRAMEBUFFER_COMPLETE;\r\n    }\r\n\r\n    class Material {\r\n      constructor(vertexShader, fragmentShaderSource) {\r\n        this.vertexShader = vertexShader;\r\n        this.fragmentShaderSource = fragmentShaderSource;\r\n        this.programs = [];\r\n        this.activeProgram = null;\r\n        this.uniforms = [];\r\n      }\r\n      setKeywords(keywords) {\r\n        let hash = 0;\r\n        for (let i = 0; i < keywords.length; i++) hash += hashCode(keywords[i]);\r\n        let program = this.programs[hash];\r\n        if (program == null) {\r\n          let fragmentShader = compileShader(\r\n            gl.FRAGMENT_SHADER,\r\n            this.fragmentShaderSource,\r\n            keywords\r\n          );\r\n          program = createProgram(this.vertexShader, fragmentShader);\r\n          this.programs[hash] = program;\r\n        }\r\n        if (program === this.activeProgram) return;\r\n        this.uniforms = getUniforms(program);\r\n        this.activeProgram = program;\r\n      }\r\n      bind() {\r\n        gl.useProgram(this.activeProgram);\r\n      }\r\n    }\r\n\r\n    class Program {\r\n      constructor(vertexShader, fragmentShader) {\r\n        this.uniforms = {};\r\n        this.program = createProgram(vertexShader, fragmentShader);\r\n        this.uniforms = getUniforms(this.program);\r\n      }\r\n      bind() {\r\n        gl.useProgram(this.program);\r\n      }\r\n    }\r\n\r\n    function createProgram(vertexShader, fragmentShader) {\r\n      let program = gl.createProgram();\r\n      gl.attachShader(program, vertexShader);\r\n      gl.attachShader(program, fragmentShader);\r\n      gl.linkProgram(program);\r\n      if (!gl.getProgramParameter(program, gl.LINK_STATUS))\r\n        console.trace(gl.getProgramInfoLog(program));\r\n      return program;\r\n    }\r\n\r\n    function getUniforms(program) {\r\n      let uniforms = [];\r\n      let uniformCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n      for (let i = 0; i < uniformCount; i++) {\r\n        let uniformName = gl.getActiveUniform(program, i).name;\r\n        uniforms[uniformName] = gl.getUniformLocation(program, uniformName);\r\n      }\r\n      return uniforms;\r\n    }\r\n\r\n    function compileShader(type, source, keywords) {\r\n      source = addKeywords(source, keywords);\r\n      const shader = gl.createShader(type);\r\n      gl.shaderSource(shader, source);\r\n      gl.compileShader(shader);\r\n      if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\r\n        console.trace(gl.getShaderInfoLog(shader));\r\n      return shader;\r\n    }\r\n\r\n    function addKeywords(source, keywords) {\r\n      if (!keywords) return source;\r\n      let keywordsString = '';\r\n      keywords.forEach((keyword) => {\r\n        keywordsString += '#define ' + keyword + '\\n';\r\n      });\r\n      return keywordsString + source;\r\n    }\r\n\r\n    const baseVertexShader = compileShader(\r\n      gl.VERTEX_SHADER,\r\n      `\r\n        precision highp float;\r\n        attribute vec2 aPosition;\r\n        varying vec2 vUv;\r\n        varying vec2 vL;\r\n        varying vec2 vR;\r\n        varying vec2 vT;\r\n        varying vec2 vB;\r\n        uniform vec2 texelSize;\r\n\r\n        void main () {\r\n            vUv = aPosition * 0.5 + 0.5;\r\n            vL = vUv - vec2(texelSize.x, 0.0);\r\n            vR = vUv + vec2(texelSize.x, 0.0);\r\n            vT = vUv + vec2(0.0, texelSize.y);\r\n            vB = vUv - vec2(0.0, texelSize.y);\r\n            gl_Position = vec4(aPosition, 0.0, 1.0);\r\n        }\r\n      `\r\n    );\r\n\r\n    const copyShader = compileShader(\r\n      gl.FRAGMENT_SHADER,\r\n      `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying highp vec2 vUv;\r\n        uniform sampler2D uTexture;\r\n\r\n        void main () {\r\n            gl_FragColor = texture2D(uTexture, vUv);\r\n        }\r\n      `\r\n    );\r\n\r\n    const clearShader = compileShader(\r\n      gl.FRAGMENT_SHADER,\r\n      `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying highp vec2 vUv;\r\n        uniform sampler2D uTexture;\r\n        uniform float value;\r\n\r\n        void main () {\r\n            gl_FragColor = value * texture2D(uTexture, vUv);\r\n        }\r\n     `\r\n    );\r\n\r\n    const displayShaderSource = `\r\n      precision highp float;\r\n      precision highp sampler2D;\r\n      varying vec2 vUv;\r\n      varying vec2 vL;\r\n      varying vec2 vR;\r\n      varying vec2 vT;\r\n      varying vec2 vB;\r\n      uniform sampler2D uTexture;\r\n      uniform sampler2D uDithering;\r\n      uniform vec2 ditherScale;\r\n      uniform vec2 texelSize;\r\n\r\n      vec3 linearToGamma (vec3 color) {\r\n          color = max(color, vec3(0));\r\n          return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\r\n      }\r\n\r\n      void main () {\r\n          vec3 c = texture2D(uTexture, vUv).rgb;\r\n          #ifdef SHADING\r\n              vec3 lc = texture2D(uTexture, vL).rgb;\r\n              vec3 rc = texture2D(uTexture, vR).rgb;\r\n              vec3 tc = texture2D(uTexture, vT).rgb;\r\n              vec3 bc = texture2D(uTexture, vB).rgb;\r\n\r\n              float dx = length(rc) - length(lc);\r\n              float dy = length(tc) - length(bc);\r\n\r\n              vec3 n = normalize(vec3(dx, dy, length(texelSize)));\r\n              vec3 l = vec3(0.0, 0.0, 1.0);\r\n\r\n              float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\r\n              c *= diffuse;\r\n          #endif\r\n\r\n          float a = max(c.r, max(c.g, c.b));\r\n          gl_FragColor = vec4(c, a);\r\n      }\r\n    `;\r\n\r\n    const splatShader = compileShader(\r\n      gl.FRAGMENT_SHADER,\r\n      `\r\n        precision highp float;\r\n        precision highp sampler2D;\r\n        varying vec2 vUv;\r\n        uniform sampler2D uTarget;\r\n        uniform float aspectRatio;\r\n        uniform vec3 color;\r\n        uniform vec2 point;\r\n        uniform float radius;\r\n\r\n        void main () {\r\n            vec2 p = vUv - point.xy;\r\n            p.x *= aspectRatio;\r\n            vec3 splat = exp(-dot(p, p) / radius) * color;\r\n            vec3 base = texture2D(uTarget, vUv).xyz;\r\n            gl_FragColor = vec4(base + splat, 1.0);\r\n        }\r\n      `\r\n    );\r\n\r\n    const advectionShader = compileShader(\r\n      gl.FRAGMENT_SHADER,\r\n      `\r\n        precision highp float;\r\n        precision highp sampler2D;\r\n        varying vec2 vUv;\r\n        uniform sampler2D uVelocity;\r\n        uniform sampler2D uSource;\r\n        uniform vec2 texelSize;\r\n        uniform vec2 dyeTexelSize;\r\n        uniform float dt;\r\n        uniform float dissipation;\r\n\r\n        vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\r\n            vec2 st = uv / tsize - 0.5;\r\n            vec2 iuv = floor(st);\r\n            vec2 fuv = fract(st);\r\n\r\n            vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\r\n            vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\r\n            vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\r\n            vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\r\n\r\n            return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\r\n        }\r\n\r\n        void main () {\r\n            #ifdef MANUAL_FILTERING\r\n                vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\r\n                vec4 result = bilerp(uSource, coord, dyeTexelSize);\r\n            #else\r\n                vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\r\n                vec4 result = texture2D(uSource, coord);\r\n            #endif\r\n            float decay = 1.0 + dissipation * dt;\r\n            gl_FragColor = result / decay;\r\n        }\r\n      `,\r\n      ext.supportLinearFiltering ? null : ['MANUAL_FILTERING']\r\n    );\r\n\r\n    const divergenceShader = compileShader(\r\n      gl.FRAGMENT_SHADER,\r\n      `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying highp vec2 vUv;\r\n        varying highp vec2 vL;\r\n        varying highp vec2 vR;\r\n        varying highp vec2 vT;\r\n        varying highp vec2 vB;\r\n        uniform sampler2D uVelocity;\r\n\r\n        void main () {\r\n            float L = texture2D(uVelocity, vL).x;\r\n            float R = texture2D(uVelocity, vR).x;\r\n            float T = texture2D(uVelocity, vT).y;\r\n            float B = texture2D(uVelocity, vB).y;\r\n\r\n            vec2 C = texture2D(uVelocity, vUv).xy;\r\n            if (vL.x < 0.0) { L = -C.x; }\r\n            if (vR.x > 1.0) { R = -C.x; }\r\n            if (vT.y > 1.0) { T = -C.y; }\r\n            if (vB.y < 0.0) { B = -C.y; }\r\n\r\n            float div = 0.5 * (R - L + T - B);\r\n            gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\r\n        }\r\n      `\r\n    );\r\n\r\n    const curlShader = compileShader(\r\n      gl.FRAGMENT_SHADER,\r\n      `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying highp vec2 vUv;\r\n        varying highp vec2 vL;\r\n        varying highp vec2 vR;\r\n        varying highp vec2 vT;\r\n        varying highp vec2 vB;\r\n        uniform sampler2D uVelocity;\r\n\r\n        void main () {\r\n            float L = texture2D(uVelocity, vL).y;\r\n            float R = texture2D(uVelocity, vR).y;\r\n            float T = texture2D(uVelocity, vT).x;\r\n            float B = texture2D(uVelocity, vB).x;\r\n            float vorticity = R - L - T + B;\r\n            gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\r\n        }\r\n      `\r\n    );\r\n\r\n    const vorticityShader = compileShader(\r\n      gl.FRAGMENT_SHADER,\r\n      `\r\n        precision highp float;\r\n        precision highp sampler2D;\r\n        varying vec2 vUv;\r\n        varying vec2 vL;\r\n        varying vec2 vR;\r\n        varying vec2 vT;\r\n        varying vec2 vB;\r\n        uniform sampler2D uVelocity;\r\n        uniform sampler2D uCurl;\r\n        uniform float curl;\r\n        uniform float dt;\r\n\r\n        void main () {\r\n            float L = texture2D(uCurl, vL).x;\r\n            float R = texture2D(uCurl, vR).x;\r\n            float T = texture2D(uCurl, vT).x;\r\n            float B = texture2D(uCurl, vB).x;\r\n            float C = texture2D(uCurl, vUv).x;\r\n\r\n            vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\r\n            force /= length(force) + 0.0001;\r\n            force *= curl * C;\r\n            force.y *= -1.0;\r\n\r\n            vec2 velocity = texture2D(uVelocity, vUv).xy;\r\n            velocity += force * dt;\r\n            velocity = min(max(velocity, -1000.0), 1000.0);\r\n            gl_FragColor = vec4(velocity, 0.0, 1.0);\r\n        }\r\n      `\r\n    );\r\n\r\n    const pressureShader = compileShader(\r\n      gl.FRAGMENT_SHADER,\r\n      `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying highp vec2 vUv;\r\n        varying highp vec2 vL;\r\n        varying highp vec2 vR;\r\n        varying highp vec2 vT;\r\n        varying highp vec2 vB;\r\n        uniform sampler2D uPressure;\r\n        uniform sampler2D uDivergence;\r\n\r\n        void main () {\r\n            float L = texture2D(uPressure, vL).x;\r\n            float R = texture2D(uPressure, vR).x;\r\n            float T = texture2D(uPressure, vT).x;\r\n            float B = texture2D(uPressure, vB).x;\r\n            float C = texture2D(uPressure, vUv).x;\r\n            float divergence = texture2D(uDivergence, vUv).x;\r\n            float pressure = (L + R + B + T - divergence) * 0.25;\r\n            gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\r\n        }\r\n      `\r\n    );\r\n\r\n    const gradientSubtractShader = compileShader(\r\n      gl.FRAGMENT_SHADER,\r\n      `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying highp vec2 vUv;\r\n        varying highp vec2 vL;\r\n        varying highp vec2 vR;\r\n        varying highp vec2 vT;\r\n        varying highp vec2 vB;\r\n        uniform sampler2D uPressure;\r\n        uniform sampler2D uVelocity;\r\n\r\n        void main () {\r\n            float L = texture2D(uPressure, vL).x;\r\n            float R = texture2D(uPressure, vR).x;\r\n            float T = texture2D(uPressure, vT).x;\r\n            float B = texture2D(uPressure, vB).x;\r\n            vec2 velocity = texture2D(uVelocity, vUv).xy;\r\n            velocity.xy -= vec2(R - L, T - B);\r\n            gl_FragColor = vec4(velocity, 0.0, 1.0);\r\n        }\r\n      `\r\n    );\r\n\r\n    const blit = (() => {\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\r\n      gl.bufferData(\r\n        gl.ARRAY_BUFFER,\r\n        new Float32Array([-1, -1, -1, 1, 1, 1, 1, -1]),\r\n        gl.STATIC_DRAW\r\n      );\r\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gl.createBuffer());\r\n      gl.bufferData(\r\n        gl.ELEMENT_ARRAY_BUFFER,\r\n        new Uint16Array([0, 1, 2, 0, 2, 3]),\r\n        gl.STATIC_DRAW\r\n      );\r\n      gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\r\n      gl.enableVertexAttribArray(0);\r\n      return (target, clear = false) => {\r\n        if (target == null) {\r\n          gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n          gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        } else {\r\n          gl.viewport(0, 0, target.width, target.height);\r\n          gl.bindFramebuffer(gl.FRAMEBUFFER, target.fbo);\r\n        }\r\n        if (clear) {\r\n          gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n          gl.clear(gl.COLOR_BUFFER_BIT);\r\n        }\r\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\r\n      };\r\n    })();\r\n\r\n    let dye, velocity, divergence, curl, pressure;\r\n\r\n    const copyProgram = new Program(baseVertexShader, copyShader);\r\n    const clearProgram = new Program(baseVertexShader, clearShader);\r\n    const splatProgram = new Program(baseVertexShader, splatShader);\r\n    const advectionProgram = new Program(baseVertexShader, advectionShader);\r\n    const divergenceProgram = new Program(baseVertexShader, divergenceShader);\r\n    const curlProgram = new Program(baseVertexShader, curlShader);\r\n    const vorticityProgram = new Program(baseVertexShader, vorticityShader);\r\n    const pressureProgram = new Program(baseVertexShader, pressureShader);\r\n    const gradienSubtractProgram = new Program(baseVertexShader, gradientSubtractShader);\r\n    const displayMaterial = new Material(baseVertexShader, displayShaderSource);\r\n\r\n    function initFramebuffers() {\r\n      let simRes = getResolution(config.SIM_RESOLUTION);\r\n      let dyeRes = getResolution(config.DYE_RESOLUTION);\r\n      const texType = ext.halfFloatTexType;\r\n      const rgba = ext.formatRGBA;\r\n      const rg = ext.formatRG;\r\n      const r = ext.formatR;\r\n      const filtering = ext.supportLinearFiltering ? gl.LINEAR : gl.NEAREST;\r\n      gl.disable(gl.BLEND);\r\n\r\n      if (!dye)\r\n        dye = createDoubleFBO(\r\n          dyeRes.width,\r\n          dyeRes.height,\r\n          rgba.internalFormat,\r\n          rgba.format,\r\n          texType,\r\n          filtering\r\n        );\r\n      else\r\n        dye = resizeDoubleFBO(\r\n          dye,\r\n          dyeRes.width,\r\n          dyeRes.height,\r\n          rgba.internalFormat,\r\n          rgba.format,\r\n          texType,\r\n          filtering\r\n        );\r\n\r\n      if (!velocity)\r\n        velocity = createDoubleFBO(\r\n          simRes.width,\r\n          simRes.height,\r\n          rg.internalFormat,\r\n          rg.format,\r\n          texType,\r\n          filtering\r\n        );\r\n      else\r\n        velocity = resizeDoubleFBO(\r\n          velocity,\r\n          simRes.width,\r\n          simRes.height,\r\n          rg.internalFormat,\r\n          rg.format,\r\n          texType,\r\n          filtering\r\n        );\r\n\r\n      divergence = createFBO(\r\n        simRes.width,\r\n        simRes.height,\r\n        r.internalFormat,\r\n        r.format,\r\n        texType,\r\n        gl.NEAREST\r\n      );\r\n      curl = createFBO(\r\n        simRes.width,\r\n        simRes.height,\r\n        r.internalFormat,\r\n        r.format,\r\n        texType,\r\n        gl.NEAREST\r\n      );\r\n      pressure = createDoubleFBO(\r\n        simRes.width,\r\n        simRes.height,\r\n        r.internalFormat,\r\n        r.format,\r\n        texType,\r\n        gl.NEAREST\r\n      );\r\n    }\r\n\r\n    function createFBO(w, h, internalFormat, format, type, param) {\r\n      gl.activeTexture(gl.TEXTURE0);\r\n      let texture = gl.createTexture();\r\n      gl.bindTexture(gl.TEXTURE_2D, texture);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, param);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, param);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, w, h, 0, format, type, null);\r\n\r\n      let fbo = gl.createFramebuffer();\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\r\n      gl.framebufferTexture2D(\r\n        gl.FRAMEBUFFER,\r\n        gl.COLOR_ATTACHMENT0,\r\n        gl.TEXTURE_2D,\r\n        texture,\r\n        0\r\n      );\r\n      gl.viewport(0, 0, w, h);\r\n      gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n      let texelSizeX = 1.0 / w;\r\n      let texelSizeY = 1.0 / h;\r\n      return {\r\n        texture,\r\n        fbo,\r\n        width: w,\r\n        height: h,\r\n        texelSizeX,\r\n        texelSizeY,\r\n        attach(id) {\r\n          gl.activeTexture(gl.TEXTURE0 + id);\r\n          gl.bindTexture(gl.TEXTURE_2D, texture);\r\n          return id;\r\n        },\r\n      };\r\n    }\r\n\r\n    function createDoubleFBO(w, h, internalFormat, format, type, param) {\r\n      let fbo1 = createFBO(w, h, internalFormat, format, type, param);\r\n      let fbo2 = createFBO(w, h, internalFormat, format, type, param);\r\n      return {\r\n        width: w,\r\n        height: h,\r\n        texelSizeX: fbo1.texelSizeX,\r\n        texelSizeY: fbo1.texelSizeY,\r\n        get read() {\r\n          return fbo1;\r\n        },\r\n        set read(value) {\r\n          fbo1 = value;\r\n        },\r\n        get write() {\r\n          return fbo2;\r\n        },\r\n        set write(value) {\r\n          fbo2 = value;\r\n        },\r\n        swap() {\r\n          let temp = fbo1;\r\n          fbo1 = fbo2;\r\n          fbo2 = temp;\r\n        },\r\n      };\r\n    }\r\n\r\n    function resizeFBO(target, w, h, internalFormat, format, type, param) {\r\n      let newFBO = createFBO(w, h, internalFormat, format, type, param);\r\n      copyProgram.bind();\r\n      gl.uniform1i(copyProgram.uniforms.uTexture, target.attach(0));\r\n      blit(newFBO);\r\n      return newFBO;\r\n    }\r\n\r\n    function resizeDoubleFBO(target, w, h, internalFormat, format, type, param) {\r\n      if (target.width === w && target.height === h) return target;\r\n      target.read = resizeFBO(\r\n        target.read,\r\n        w,\r\n        h,\r\n        internalFormat,\r\n        format,\r\n        type,\r\n        param\r\n      );\r\n      target.write = createFBO(w, h, internalFormat, format, type, param);\r\n      target.width = w;\r\n      target.height = h;\r\n      target.texelSizeX = 1.0 / w;\r\n      target.texelSizeY = 1.0 / h;\r\n      return target;\r\n    }\r\n\r\n    function updateKeywords() {\r\n      let displayKeywords = [];\r\n      if (config.SHADING) displayKeywords.push('SHADING');\r\n      displayMaterial.setKeywords(displayKeywords);\r\n    }\r\n\r\n    updateKeywords();\r\n    initFramebuffers();\r\n    let lastUpdateTime = Date.now();\r\n    let colorUpdateTimer = 0.0;\r\n\r\n    function updateFrame() {\r\n      const dt = calcDeltaTime();\r\n      if (resizeCanvas()) initFramebuffers();\r\n      updateColors(dt);\r\n      applyInputs();\r\n      step(dt);\r\n      render(null);\r\n      requestAnimationFrame(updateFrame);\r\n    }\r\n\r\n    function calcDeltaTime() {\r\n      let now = Date.now();\r\n      let dt = (now - lastUpdateTime) / 1000;\r\n      dt = Math.min(dt, 0.016666);\r\n      lastUpdateTime = now;\r\n      return dt;\r\n    }\r\n\r\n    function resizeCanvas() {\r\n      let width = scaleByPixelRatio(canvas.clientWidth);\r\n      let height = scaleByPixelRatio(canvas.clientHeight);\r\n      if (canvas.width !== width || canvas.height !== height) {\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    function updateColors(dt) {\r\n      colorUpdateTimer += dt * config.COLOR_UPDATE_SPEED;\r\n      if (colorUpdateTimer >= 1) {\r\n        colorUpdateTimer = wrap(colorUpdateTimer, 0, 1);\r\n        pointers.forEach((p) => {\r\n          p.color = generateColor();\r\n        });\r\n      }\r\n    }\r\n\r\n    function applyInputs() {\r\n      pointers.forEach((p) => {\r\n        if (p.moved) {\r\n          p.moved = false;\r\n          splatPointer(p);\r\n        }\r\n      });\r\n    }\r\n\r\n    function step(dt) {\r\n      gl.disable(gl.BLEND);\r\n      curlProgram.bind();\r\n      gl.uniform2f(\r\n        curlProgram.uniforms.texelSize,\r\n        velocity.texelSizeX,\r\n        velocity.texelSizeY\r\n      );\r\n      gl.uniform1i(curlProgram.uniforms.uVelocity, velocity.read.attach(0));\r\n      blit(curl);\r\n\r\n      vorticityProgram.bind();\r\n      gl.uniform2f(\r\n        vorticityProgram.uniforms.texelSize,\r\n        velocity.texelSizeX,\r\n        velocity.texelSizeY\r\n      );\r\n      gl.uniform1i(vorticityProgram.uniforms.uVelocity, velocity.read.attach(0));\r\n      gl.uniform1i(vorticityProgram.uniforms.uCurl, curl.attach(1));\r\n      gl.uniform1f(vorticityProgram.uniforms.curl, config.CURL);\r\n      gl.uniform1f(vorticityProgram.uniforms.dt, dt);\r\n      blit(velocity.write);\r\n      velocity.swap();\r\n\r\n      divergenceProgram.bind();\r\n      gl.uniform2f(\r\n        divergenceProgram.uniforms.texelSize,\r\n        velocity.texelSizeX,\r\n        velocity.texelSizeY\r\n      );\r\n      gl.uniform1i(divergenceProgram.uniforms.uVelocity, velocity.read.attach(0));\r\n      blit(divergence);\r\n\r\n      clearProgram.bind();\r\n      gl.uniform1i(clearProgram.uniforms.uTexture, pressure.read.attach(0));\r\n      gl.uniform1f(clearProgram.uniforms.value, config.PRESSURE);\r\n      blit(pressure.write);\r\n      pressure.swap();\r\n\r\n      pressureProgram.bind();\r\n      gl.uniform2f(\r\n        pressureProgram.uniforms.texelSize,\r\n        velocity.texelSizeX,\r\n        velocity.texelSizeY\r\n      );\r\n      gl.uniform1i(pressureProgram.uniforms.uDivergence, divergence.attach(0));\r\n      for (let i = 0; i < config.PRESSURE_ITERATIONS; i++) {\r\n        gl.uniform1i(pressureProgram.uniforms.uPressure, pressure.read.attach(1));\r\n        blit(pressure.write);\r\n        pressure.swap();\r\n      }\r\n\r\n      gradienSubtractProgram.bind();\r\n      gl.uniform2f(\r\n        gradienSubtractProgram.uniforms.texelSize,\r\n        velocity.texelSizeX,\r\n        velocity.texelSizeY\r\n      );\r\n      gl.uniform1i(\r\n        gradienSubtractProgram.uniforms.uPressure,\r\n        pressure.read.attach(0)\r\n      );\r\n      gl.uniform1i(\r\n        gradienSubtractProgram.uniforms.uVelocity,\r\n        velocity.read.attach(1)\r\n      );\r\n      blit(velocity.write);\r\n      velocity.swap();\r\n\r\n      advectionProgram.bind();\r\n      gl.uniform2f(\r\n        advectionProgram.uniforms.texelSize,\r\n        velocity.texelSizeX,\r\n        velocity.texelSizeY\r\n      );\r\n      if (!ext.supportLinearFiltering)\r\n        gl.uniform2f(\r\n          advectionProgram.uniforms.dyeTexelSize,\r\n          velocity.texelSizeX,\r\n          velocity.texelSizeY\r\n        );\r\n      let velocityId = velocity.read.attach(0);\r\n      gl.uniform1i(advectionProgram.uniforms.uVelocity, velocityId);\r\n      gl.uniform1i(advectionProgram.uniforms.uSource, velocityId);\r\n      gl.uniform1f(advectionProgram.uniforms.dt, dt);\r\n      gl.uniform1f(\r\n        advectionProgram.uniforms.dissipation,\r\n        config.VELOCITY_DISSIPATION\r\n      );\r\n      blit(velocity.write);\r\n      velocity.swap();\r\n\r\n      if (!ext.supportLinearFiltering)\r\n        gl.uniform2f(\r\n          advectionProgram.uniforms.dyeTexelSize,\r\n          dye.texelSizeX,\r\n          dye.texelSizeY\r\n        );\r\n      gl.uniform1i(advectionProgram.uniforms.uVelocity, velocity.read.attach(0));\r\n      gl.uniform1i(advectionProgram.uniforms.uSource, dye.read.attach(1));\r\n      gl.uniform1f(\r\n        advectionProgram.uniforms.dissipation,\r\n        config.DENSITY_DISSIPATION\r\n      );\r\n      blit(dye.write);\r\n      dye.swap();\r\n    }\r\n\r\n    function render(target) {\r\n      gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n      gl.enable(gl.BLEND);\r\n      drawDisplay(target);\r\n    }\r\n\r\n    function drawDisplay(target) {\r\n      let width = target == null ? gl.drawingBufferWidth : target.width;\r\n      let height = target == null ? gl.drawingBufferHeight : target.height;\r\n      displayMaterial.bind();\r\n      if (config.SHADING)\r\n        gl.uniform2f(displayMaterial.uniforms.texelSize, 1.0 / width, 1.0 / height);\r\n      gl.uniform1i(displayMaterial.uniforms.uTexture, dye.read.attach(0));\r\n      blit(target);\r\n    }\r\n\r\n    function splatPointer(pointer) {\r\n      let dx = pointer.deltaX * config.SPLAT_FORCE;\r\n      let dy = pointer.deltaY * config.SPLAT_FORCE;\r\n      splat(pointer.texcoordX, pointer.texcoordY, dx, dy, pointer.color);\r\n    }\r\n\r\n    function clickSplat(pointer) {\r\n      const color = generateColor();\r\n      color.r *= 10.0;\r\n      color.g *= 10.0;\r\n      color.b *= 10.0;\r\n      let dx = 10 * (Math.random() - 0.5);\r\n      let dy = 30 * (Math.random() - 0.5);\r\n      splat(pointer.texcoordX, pointer.texcoordY, dx, dy, color);\r\n    }\r\n\r\n    function splat(x, y, dx, dy, color) {\r\n      splatProgram.bind();\r\n      gl.uniform1i(splatProgram.uniforms.uTarget, velocity.read.attach(0));\r\n      gl.uniform1f(\r\n        splatProgram.uniforms.aspectRatio,\r\n        canvas.width / canvas.height\r\n      );\r\n      gl.uniform2f(splatProgram.uniforms.point, x, y);\r\n      gl.uniform3f(splatProgram.uniforms.color, dx, dy, 0.0);\r\n      gl.uniform1f(splatProgram.uniforms.radius, correctRadius(config.SPLAT_RADIUS / 100.0));\r\n      blit(velocity.write);\r\n      velocity.swap();\r\n\r\n      gl.uniform1i(splatProgram.uniforms.uTarget, dye.read.attach(0));\r\n      gl.uniform3f(splatProgram.uniforms.color, color.r, color.g, color.b);\r\n      blit(dye.write);\r\n      dye.swap();\r\n    }\r\n\r\n    function correctRadius(radius) {\r\n      let aspectRatio = canvas.width / canvas.height;\r\n      if (aspectRatio > 1) radius *= aspectRatio;\r\n      return radius;\r\n    }\r\n\r\n    function updatePointerDownData(pointer, id, posX, posY) {\r\n      pointer.id = id;\r\n      pointer.down = true;\r\n      pointer.moved = false;\r\n      pointer.texcoordX = posX / canvas.width;\r\n      pointer.texcoordY = 1.0 - posY / canvas.height;\r\n      pointer.prevTexcoordX = pointer.texcoordX;\r\n      pointer.prevTexcoordY = pointer.texcoordY;\r\n      pointer.deltaX = 0;\r\n      pointer.deltaY = 0;\r\n      pointer.color = generateColor();\r\n    }\r\n\r\n    function updatePointerMoveData(pointer, posX, posY, color) {\r\n      pointer.prevTexcoordX = pointer.texcoordX;\r\n      pointer.prevTexcoordY = pointer.texcoordY;\r\n      pointer.texcoordX = posX / canvas.width;\r\n      pointer.texcoordY = 1.0 - posY / canvas.height;\r\n      pointer.deltaX = correctDeltaX(pointer.texcoordX - pointer.prevTexcoordX);\r\n      pointer.deltaY = correctDeltaY(pointer.texcoordY - pointer.prevTexcoordY);\r\n      pointer.moved = Math.abs(pointer.deltaX) > 0 || Math.abs(pointer.deltaY) > 0;\r\n      pointer.color = color;\r\n    }\r\n\r\n    function updatePointerUpData(pointer) {\r\n      pointer.down = false;\r\n    }\r\n\r\n    function correctDeltaX(delta) {\r\n      let aspectRatio = canvas.width / canvas.height;\r\n      if (aspectRatio < 1) delta *= aspectRatio;\r\n      return delta;\r\n    }\r\n\r\n    function correctDeltaY(delta) {\r\n      let aspectRatio = canvas.width / canvas.height;\r\n      if (aspectRatio > 1) delta /= aspectRatio;\r\n      return delta;\r\n    }\r\n\r\n    function generateColor() {\r\n      let c = HSVtoRGB(Math.random(), 1.0, 1.0);\r\n      c.r *= 0.15;\r\n      c.g *= 0.15;\r\n      c.b *= 0.15;\r\n      return c;\r\n    }\r\n\r\n    function HSVtoRGB(h, s, v) {\r\n      let r, g, b, i, f, p, q, t;\r\n      i = Math.floor(h * 6);\r\n      f = h * 6 - i;\r\n      p = v * (1 - s);\r\n      q = v * (1 - f * s);\r\n      t = v * (1 - (1 - f) * s);\r\n      switch (i % 6) {\r\n        case 0:\r\n          r = v;\r\n          g = t;\r\n          b = p;\r\n          break;\r\n        case 1:\r\n          r = q;\r\n          g = v;\r\n          b = p;\r\n          break;\r\n        case 2:\r\n          r = p;\r\n          g = v;\r\n          b = t;\r\n          break;\r\n        case 3:\r\n          r = p;\r\n          g = q;\r\n          b = v;\r\n          break;\r\n        case 4:\r\n          r = t;\r\n          g = p;\r\n          b = v;\r\n          break;\r\n        case 5:\r\n          r = v;\r\n          g = p;\r\n          b = q;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      return { r, g, b };\r\n    }\r\n\r\n    function wrap(value, min, max) {\r\n      const range = max - min;\r\n      if (range === 0) return min;\r\n      return ((value - min) % range) + min;\r\n    }\r\n\r\n    function getResolution(resolution) {\r\n      let aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n      if (aspectRatio < 1) aspectRatio = 1.0 / aspectRatio;\r\n      const min = Math.round(resolution);\r\n      const max = Math.round(resolution * aspectRatio);\r\n      if (gl.drawingBufferWidth > gl.drawingBufferHeight)\r\n        return { width: max, height: min };\r\n      else return { width: min, height: max };\r\n    }\r\n\r\n    function scaleByPixelRatio(input) {\r\n      const pixelRatio = window.devicePixelRatio || 1;\r\n      return Math.floor(input * pixelRatio);\r\n    }\r\n\r\n    function hashCode(s) {\r\n      if (s.length === 0) return 0;\r\n      let hash = 0;\r\n      for (let i = 0; i < s.length; i++) {\r\n        hash = (hash << 5) - hash + s.charCodeAt(i);\r\n        hash |= 0;\r\n      }\r\n      return hash;\r\n    }\r\n\r\n    window.addEventListener('mousedown', (e) => {\r\n      let pointer = pointers[0];\r\n      let posX = scaleByPixelRatio(e.clientX);\r\n      let posY = scaleByPixelRatio(e.clientY);\r\n      updatePointerDownData(pointer, -1, posX, posY);\r\n      clickSplat(pointer);\r\n    });\r\n\r\n    document.body.addEventListener('mousemove', function handleFirstMouseMove(e) {\r\n      let pointer = pointers[0];\r\n      let posX = scaleByPixelRatio(e.clientX);\r\n      let posY = scaleByPixelRatio(e.clientY);\r\n      let color = generateColor();\r\n      updateFrame();\r\n      updatePointerMoveData(pointer, posX, posY, color);\r\n      document.body.removeEventListener('mousemove', handleFirstMouseMove);\r\n    });\r\n\r\n    window.addEventListener('mousemove', (e) => {\r\n      let pointer = pointers[0];\r\n      let posX = scaleByPixelRatio(e.clientX);\r\n      let posY = scaleByPixelRatio(e.clientY);\r\n      let color = pointer.color;\r\n      updatePointerMoveData(pointer, posX, posY, color);\r\n    });\r\n\r\n    document.body.addEventListener('touchstart', function handleFirstTouchStart(e) {\r\n      const touches = e.targetTouches;\r\n      let pointer = pointers[0];\r\n      for (let i = 0; i < touches.length; i++) {\r\n        let posX = scaleByPixelRatio(touches[i].clientX);\r\n        let posY = scaleByPixelRatio(touches[i].clientY);\r\n        updateFrame();\r\n        updatePointerDownData(pointer, touches[i].identifier, posX, posY);\r\n      }\r\n      document.body.removeEventListener('touchstart', handleFirstTouchStart);\r\n    });\r\n\r\n    window.addEventListener('touchstart', (e) => {\r\n      const touches = e.targetTouches;\r\n      let pointer = pointers[0];\r\n      for (let i = 0; i < touches.length; i++) {\r\n        let posX = scaleByPixelRatio(touches[i].clientX);\r\n        let posY = scaleByPixelRatio(touches[i].clientY);\r\n        updatePointerDownData(pointer, touches[i].identifier, posX, posY);\r\n      }\r\n    });\r\n\r\n    window.addEventListener(\r\n      'touchmove',\r\n      (e) => {\r\n        const touches = e.targetTouches;\r\n        let pointer = pointers[0];\r\n        for (let i = 0; i < touches.length; i++) {\r\n          let posX = scaleByPixelRatio(touches[i].clientX);\r\n          let posY = scaleByPixelRatio(touches[i].clientY);\r\n          updatePointerMoveData(pointer, posX, posY, pointer.color);\r\n        }\r\n      },\r\n      false\r\n    );\r\n\r\n    window.addEventListener('touchend', (e) => {\r\n      const touches = e.changedTouches;\r\n      let pointer = pointers[0];\r\n      for (let i = 0; i < touches.length; i++) {\r\n        updatePointerUpData(pointer);\r\n      }\r\n    });\r\n\r\n    updateFrame();\r\n  }, [\r\n    SIM_RESOLUTION,\r\n    DYE_RESOLUTION,\r\n    CAPTURE_RESOLUTION,\r\n    DENSITY_DISSIPATION,\r\n    VELOCITY_DISSIPATION,\r\n    PRESSURE,\r\n    PRESSURE_ITERATIONS,\r\n    CURL,\r\n    SPLAT_RADIUS,\r\n    SPLAT_FORCE,\r\n    SHADING,\r\n    COLOR_UPDATE_SPEED,\r\n    BACK_COLOR,\r\n    TRANSPARENT,\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"fixed top-0 left-0 z-50 pointer-events-none w-full h-full\">\r\n      <canvas ref={canvasRef} id=\"fluid\" className=\"w-screen h-screen block\"></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SplashCursor;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1234, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/win11/PROJECTS/rittzworld/src/components/Hero.jsx"],"sourcesContent":["\"use client\";\r\nimport ScrambledText from \"@/animations/ScrambledText\";\r\nimport SplashCursor from \"@/animations/SplashCursor\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class Hero extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        {/* <SplashCursor /> */}\r\n        <div className=\"w-full h-screen font-sans overflow-hidden text-white bg-black\">\r\n          <ScrambledText\r\n            className=\"py-45 px-6\"\r\n            radius={30}\r\n            duration={1}\r\n            speed={0.5}\r\n            scrambleChars=\"\"\r\n          >\r\n            <h1 className=\"text-5xl leading-14\">\r\n              <span className=\"font-bold text-6xl\">W</span>e Build Products\r\n              <br />\r\n              That <span className=\"font-bold\">Scale —</span>\r\n              <br />\r\n              <span className=\"font-bold\">No Code Required.</span>\r\n            </h1>\r\n          </ScrambledText>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AAKe,MAAM,aAAa,qMAAA,CAAA,YAAS;IACzC,SAAS;QACP,qBACE;sBAEE,cAAA,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,mIAAA,CAAA,UAAa;oBACZ,WAAU;oBACV,QAAQ;oBACR,UAAU;oBACV,OAAO;oBACP,eAAc;8BAEd,cAAA,8OAAC;wBAAG,WAAU;;0CACZ,8OAAC;gCAAK,WAAU;0CAAqB;;;;;;4BAAQ;0CAC7C,8OAAC;;;;;4BAAK;0CACD,8OAAC;gCAAK,WAAU;0CAAY;;;;;;0CACjC,8OAAC;;;;;0CACD,8OAAC;gCAAK,WAAU;0CAAY;;;;;;;;;;;;;;;;;;;;;;;IAMxC;AACF","debugId":null}}]
}